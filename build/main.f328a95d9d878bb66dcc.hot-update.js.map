{"version":3,"file":"main.f328a95d9d878bb66dcc.hot-update.js","sources":["webpack:///./src/common/distributionCenters/pages/Form.js","webpack:///./src/common/distributionCenters/pages/New.js","webpack:///./src/common/distributionCenters/pages/index.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport { DialogActions, Grid, Select } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport TextField from '@material-ui/core/TextField'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\n\n// Externals imports (Dependencies)\nimport React from 'react'\nimport InputMask from 'react-input-mask'\nimport { connect } from 'react-redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/distributionCenters'\nimport EnhancedComponent from '../../components/EnhancedComponent'\n\nclass DistributionCenterForm extends EnhancedComponent {\n  state = {\n    dirty: false,\n    fields: {\n      description: '',\n      CNPJ: '',\n      CEP: '',\n      street: '',\n      number: '',\n      complement: '',\n      bairro: '',\n      city: '',\n      state: '',\n      phone: '',\n    },\n  }\n\n  handleClose = () => this.props.onClose && this.props.onClose()\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.dirty && nextProps.data) {\n      this.setState({\n        fields: {\n          ...nextProps.data,\n        },\n      })\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    this.props.onSubmit && this.props.onSubmit(this.state.fields)\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <DialogContent>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('description')}\n                label=\"Descrição\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.description}\n              />\n            </Grid>\n            <Grid item xs>\n              <InputMask\n                mask=\"99.999.999/9999-99\"\n                value={this.state.fields.CNPJ}\n                onChange={this.onChange('CNPJ')}\n              >\n                {() => (\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    label=\"CNPJ\"\n                    required\n                  />\n                )}\n              </InputMask>\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <InputMask\n                mask=\"99.999-999\"\n                onBlur={this.findCep}\n                value={this.state.fields.CEP}\n                onChange={this.onChange('CEP')}\n              >\n                {() => (\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    label=\"CEP\"\n                    required\n                  />\n                )}\n              </InputMask>\n            </Grid>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('street')}\n                label=\"Logradouro\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.street}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                onChange={this.onChange('number')}\n                label=\"Número\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.number}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('complement')}\n                label=\"Complemento\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                value={this.state.fields.complement}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('bairro')}\n                label=\"Bairro\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.bairro}\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('city')}\n                label=\"Cidade\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.city}\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('state')}\n                label=\"Estado\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.state}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('phone')}\n                label=\"Telefone\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.phone}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" type=\"submit\">\n            Salvar\n          </Button>\n          <Button onClick={this.handleClose}>Cancelar</Button>\n        </DialogActions>\n      </form>\n    )\n  }\n}\n\nDistributionCenterForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.distributioncenter.roles || [],\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(DistributionCenterForm))\n","// IMPORTS\n// Material UI\nimport AppBar from '@material-ui/core/AppBar'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport CloseIcon from '@material-ui/icons/Close'\nimport PropTypes from 'prop-types'\n\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport styles from '../../../resources/theme/stores'\n// Internal imports\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { post } from '../StoreActions'\nimport Form from './Form'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass NewStore extends EnhancedComponent {\n  state = {\n    fields: {\n      description: '',\n      CNPJ: '',\n      min_freight: '',\n      CEP: '',\n      street: '',\n      number: '',\n      complement: '',\n      bairro: '',\n      city: '',\n      state: '',\n    },\n  }\n\n  componentDidMount() {}\n\n  onSubmit = values => {\n    // valida os campos se necessário\n    this.props.post(values).then(data => {\n      if (data && data.code === 200) {\n        this.props.history.push('/stores')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/stores')\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Dialog\n        fullScreen\n        open={true}\n        onClose={this.onClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n              Novo Lojista\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.onClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Form onClose={this.onClose} onSubmit={this.onSubmit} />\n      </Dialog>\n    )\n  }\n}\n\nNewStore.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.store.roles || [],\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      post,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(NewStore))\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport DistributionCenterIcon from '@material-ui/icons/Business'\nimport PropTypes from 'prop-types'\n\n// Externals imports (Dependencies)\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nimport styles from '../../../resources/theme/distributionCenters'\n\n// Internal imports\nimport { fetchDistributionCenters } from '../DistributionCentersActions'\nimport { getDistributionCenterListData } from '../DistributionCentersReducer'\nimport EditDistributionCenter from './Edit'\nimport List from './List'\nimport NewDistributionCenter from './New'\nimport Filters from './Filters'\nimport ListFleets from './fleets/index'\n\nclass DistributionCenter extends Component {\n  componentDidMount() {\n    this.props.fetchDistributionCenters()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Centros de Distribuição</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/distributioncenters/new\"\n            >\n              <DistributionCenterIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Filters />\n\n        <Route path=\"/distributioncenters/new\" component={NewDistributionCenter} />\n        <Route path=\"/distributioncenters/:id/edit\" component={EditDistributionCenter} />\n        <Route\n          path=\"/distributioncenters/:id/list-fleets\"\n          component={ListFleets}\n        />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nDistributionCenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetchDistributionCenters: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getDistributionCenterListData(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchDistributionCenters,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DistributionCenter))\n"],"mappings":"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","sourceRoot":""}