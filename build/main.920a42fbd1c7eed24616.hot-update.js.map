{"version":3,"file":"main.920a42fbd1c7eed24616.hot-update.js","sources":["webpack:///./src/common/main/reducers.js","webpack:///./src/common/stores/StoreReducer.js","webpack:///./src/common/stores/pages/index.js"],"sourcesContent":["import { combineReducers } from 'redux'\n\nimport auth from '../auth/AuthReducer'\nimport store from '../stores/StoreReducer'\nimport user from '../users/UserReducer'\nimport main from './MainReducer'\n\nconst rootReducer = combineReducers({\n  main,\n  auth,\n  user,\n  store\n})\n\nexport default rootReducer\n","import { EDIT_STORE, FETCH_STORE } from './StoreActions'\n\nconst INITIAL_STATE = {\n  items: [],\n  roles: [],\n  totalSize: 0,\n  page: 1,\n  sizePerPage: 10,\n  filters: [],\n  editingUser: null,\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_USER.SUCCESS:\n      return {\n        ...state,\n        items: action.payload.data.items,\n        roles: action.payload.data.filterRoles,\n        totalSize: action.payload.data.totalSize,\n        page: action.payload.data.page,\n        sizePerPage: action.payload.data.sizePerPage,\n        filters: action.payload.data.filters,\n      }\n    case EDIT_USER.SUCCESS:\n      return {\n        ...state,\n        editingUser: action.payload,\n      }\n    case 'USER_INITIALIZE':\n      return {\n        ...state,\n        roles: action.payload.data.roles,\n        stores: action.payload.data.stores,\n        branches: action.payload.data.branches,\n        role: action.payload.data.role,\n      }\n    default:\n      return state\n  }\n}\n\nexport const getUserListData = state => {\n  return {\n    items: state.user.items,\n    roles: state.user.roles,\n    totalSize: state.user.totalSize,\n    page: state.user.page,\n    sizePerPage: state.user.sizePerPage,\n  }\n}\n\nexport const getEditingUser = state => {\n  return state.user.editingUser\n}\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\n// Externals imports (Dependencies)\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\n\n// Internal imports\nimport { fetchStores } from '../StoreActions'\nimport { getStoreListData } from '../StoreReducer'\nimport styles from '../../../resources/theme/stores'\nimport EditStore from './Edit'\nimport NewStore from './New'\nimport List from './List'\n\nclass Store extends Component {\n  componentDidMount() {\n    this.props.fetchStores()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Lojistas</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/stores/new\"\n            >\n              <PersonAddIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Route path=\"/stores/new\" component={NewStore} />\n        <Route path=\"/stores/:id/edit\" component={EditStore} />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nStore.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetchStores: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getStoreListData(state),\n})\n \nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchStores,\n    },\n    dispatch\n  )\n\n// export Store class\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Store))\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAzBA;AA2BA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjCA;AACA;AAmCA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AACA;AAOA;;;;A","sourceRoot":""}