{"version":3,"file":"main.e5167c9ab51fedb0e922.hot-update.js","sources":["webpack:///./src/common/stores/pages/Form.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport { DialogActions, Grid, Select } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\n// Externals imports (Dependencies)\nimport React from 'react'\nimport InputMask from 'react-input-mask'\nimport { connect } from 'react-redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/stores'\nimport EnhancedComponent from '../../components/EnhancedComponent'\n\nclass StoreForm extends EnhancedComponent {\n  state = {\n    dirty: false,\n    fields: {\n      description: '',\n      CNPJ: '',\n      min_freight: '',\n      CEP: '',\n      street: '',\n      number: '',\n      complement: '',\n      bairro: '',\n      city: '',\n      state: '',\n      phone: '',\n    },\n  }\n\n  handleClose = () => this.props.onClose && this.props.onClose()\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.dirty && nextProps.data) {\n      this.setState({\n        fields: {\n          ...nextProps.data,\n        },\n      })\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    this.props.onSubmit && this.props.onSubmit(this.state.fields)\n  }\n\n  render() {\n    const { classes, roles } = this.props\n    return (\n      <form onSubmit={this.onSubmit}>\n        <DialogContent>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('description')}\n                label=\"Descrição\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.description}\n              />\n            </Grid>\n            <Grid item xs>\n              <InputMask\n                mask=\"99.999.999/9999-99\"\n                value={this.state.fields.CNPJ}\n                onChange={this.onChange('CNPJ')}\n              >\n                {() => (\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    label=\"CNPJ\"\n                    required\n                  />\n                )}\n              </InputMask>\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('min_freight')}\n                label=\"Frete Mínimo\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.min_freight}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <InputMask\n                mask=\"99.999-999\"\n                onBlur={this.findCep}\n                value={this.state.fields.CEP}\n                onChange={this.onChange('CEP')}\n              >\n                {() => (\n                  <TextField\n                    fullWidth\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    label=\"CEP\"\n                    required\n                  />\n                )}\n              </InputMask>\n            </Grid>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('street')}\n                label=\"Logradouro\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.street}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                onChange={this.onChange('number')}\n                label=\"Número\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.number}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('complement')}\n                label=\"Complemento\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                value={this.state.fields.complement}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('bairro')}\n                label=\"Bairro\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.bairro}\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('city')}\n                label=\"Cidade\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.city}\n              />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('state')}\n                label=\"Estado\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.state}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item xs>\n              <TextField\n                onChange={this.onChange('number')}\n                label=\"Número\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                fullWidth\n                required\n                value={this.state.fields.number}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" type=\"submit\">\n            Salvar\n          </Button>\n          <Button onClick={this.handleClose}>Cancelar</Button>\n        </DialogActions>\n      </form>\n    )\n  }\n}\n\nStoreForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.store.roles || [],\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(StoreForm))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAFA;AACA;AAgBA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;;;;;;AAdA;AACA;AACA;AACA;AADA;AAKA;AACA;;;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAlMA;AACA;AAoMA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}