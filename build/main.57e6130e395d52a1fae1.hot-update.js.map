{"version":3,"file":"main.57e6130e395d52a1fae1.hot-update.js","sources":["webpack:///./src/common/components/Menu.js","webpack:///external \"@material-ui/icons/BusinessCenter\""],"sourcesContent":["import AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport Drawer from '@material-ui/core/Drawer'\nimport IconButton from '@material-ui/core/IconButton'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport HomeIcon  from '@material-ui/icons/Home'\nimport PersonIcon from '@material-ui/icons/Person'\nimport StoreIcon from '@material-ui/icons/Store'\nimport SupplierIcon from '@material-ui/icons/LocalGroceryStore'\nimport FleetIcon from '@material-ui/icons/LocalShipping'\nimport DistributionCenterIcon from '@material-ui/icons/BusinessCenter'\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport Typography from '@material-ui/core/Typography'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types'\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nimport config from '../../config'\nimport { logout } from '../auth/AuthActions'\n\nconst drawerWidth = 250\n\nconst styles = theme => ({\n  logo: {\n    width: 110,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  btnLogout: {\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n    backgroundColor: theme.palette.primary.main,\n    boxShadow:\n      '0px 2px 4px -1px rgba(0,0,0,0.2), 0px 4px 5px 0px rgba(0,0,0,0.14), 0px 1px 10px 0px rgba(0,0,0,0.12)',\n  },\n  listDrawer: {\n    paddingTop: 0,\n    zoom: 0.99,\n  },\n})\n\nclass Menu extends Component {\n\n  state = { open: false };\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  render() {\n    const {\n      classes,\n      theme,\n      open,\n      handleDrawerOpen,\n      handleDrawerClose,\n    } = this.props\n\n    return (\n      <div>\n        <AppBar\n          position=\"fixed\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <div className={classes.grow}>\n              {/* <img className={classes.logo} src=\"/img/logo.png\" /> */}\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              {config.title}\n              </Typography>\n            </div>\n            <Button\n              className={classes.btnLogout}\n              onClick={this.props.logout}\n              color=\"inherit\"\n            >\n              Sair\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton light onClick={handleDrawerClose}>\n              <ChevronLeftIcon color=\"secondary\" />\n            </IconButton>\n          </div>\n          <Divider />\n          <List className={classes.listDrawer}>\n          <ListItem button component={Link} to=\"/\">\n              <ListItemIcon><HomeIcon /></ListItemIcon>\n              <ListItemText primary=\"Home\" />\n           </ListItem>\n          <ListItem button onClick={this.handleClick}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Cadastros Básicos\" />\n            {this.state.open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem button component={Link} to=\"/users\">\n                <ListItemIcon><PersonIcon /></ListItemIcon>\n                <ListItemText inset primary=\"Usuários\" />\n              </ListItem>\n              <ListItem button component={Link} to=\"/stores\">\n                <ListItemIcon><StoreIcon /></ListItemIcon>\n                <ListItemText inset primary=\"Lojistas\" />\n              </ListItem>\n              <ListItem button component={Link} to=\"/suppliers\">\n                <ListItemIcon><SupplierIcon /></ListItemIcon>\n\t\t\t\t        <ListItemText primary=\"Fornecedores\" />\n\t\t\t\t      </ListItem>\n              <ListItem button component={Link} to=\"/distributioncenters\">\n                <ListItemIcon><DistributionCenterIcon /></ListItemIcon>\n\t\t\t\t        <ListItemText primary=\"Centros de Distribuição\" onClick={this.props.handleDrawerClose}/>\n\t\t\t\t      </ListItem>\n              <ListItem button component={Link} to=\"/fleet\">\n                <ListItemIcon><FleetIcon /></ListItemIcon>\n\t\t\t\t        <ListItemText primary=\"Frotistas\" onClick={this.props.handleDrawerClose}/>\n\t\t\t\t      </ListItem>\n            </List>\n          </Collapse>\n          </List>\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({ user: state.auth.user || [] })\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      logout,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Menu))\n","module.exports = require(\"@material-ui/icons/BusinessCenter\");"],"mappings":"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","sourceRoot":""}