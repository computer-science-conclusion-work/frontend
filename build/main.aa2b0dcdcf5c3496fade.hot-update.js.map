{"version":3,"file":"main.aa2b0dcdcf5c3496fade.hot-update.js","sources":["webpack:///./src/common/users/pages/New.jsx"],"sourcesContent":["// IMPORTS\n// Material-ui\nimport Slide from '@material-ui/core/Slide'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// External\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal\nimport styles from '../../../resources/theme/users'\nimport DialogForm from '../../templates/DialogForm'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { post } from '../UserActions'\nimport Form from './Form'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass NewUser extends EnhancedComponent {\n  state = {\n    fields: {\n      name: '',\n      email: '',\n      role_id: '',\n    },\n  }\n\n  componentDidMount() {}\n\n  onSubmit = values => {\n    // valida os campos se necessário\n    this.props.post(values).then(data => {\n      if (data && data.code === 200) {\n        this.props.history.push('/users')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/users')\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <DialogForm\n        open={true}\n        handleClose={this.onClose}\n        transition={Transition}\n        appBar={classes.appBar}\n        flex={classes.flex}\n        title=\"Novo Usuário\">\n        <Form\n          onClose={this.onClose}\n          onSubmit={this.onSubmit} />\n      </DialogForm>\n    )\n  }\n}\n\nNewUser.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.user.roles || [],\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      post,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(NewUser))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAdA;;;AAeA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAvCA;AACA;AAyCA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AAOA;;;;A","sourceRoot":""}