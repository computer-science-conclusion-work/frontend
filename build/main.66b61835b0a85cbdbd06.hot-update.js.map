{"version":3,"file":"main.66b61835b0a85cbdbd06.hot-update.js","sources":["webpack:///./src/common/stores/pages/distributioncenters/List.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Table from '@material-ui/core/Table'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport Switch from '@material-ui/core/Switch'\n\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\n\n// Internal imports\nimport styles from '../../../../resources/theme/users'\nimport EnhancedComponent from '../../../components/EnhancedComponent'\nimport { fetchDistributionCentersPerStores } from '../../../distributionCenters/DistributionCentersActions'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass List extends EnhancedComponent {\n  state = {\n    dirty: false,\n    fields: {\n      CD: []\n    },\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.dirty && nextProps.data) {\n      this.setState({\n        fields: {\n          CD: nextProps.data,\n        },\n      })\n    }\n  }\n\n  handleChange = name => event => {\n    let localState = this.state.fields.CD\n    localState[name].status = event.target.checked\n\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        localState\n      },\n    })\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    this.props.onSubmit && this.props.onSubmit(this.state.fields.CD)\n  }\n\n  onClose = () => {\n    this.props.onClose && this.props.onClose();\n  } \n\n  render() {\n    const { classes, data } = this.props\n    return (\n      <Dialog\n        open={data !== null}\n        fullScreen\n        onClose={this.onClose}\n        TransitionComponent={Transition}\n      >\n        <form onSubmit={this.onSubmit}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                Centros de Distribuição do Lojista\n              </Typography>\n              <IconButton\n                color=\"inherit\"\n                onClick={this.onClose}\n                aria-label=\"Close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid container spacing={16}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Ativo/Inativo</TableCell> \n                    <TableCell>Identificador</TableCell>\n                    <TableCell>Descrição</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.state.fields.CD.map((item, index) => (\n                    <TableRow key={item.id}>\n                      <TableCell><Switch\n                              checked={this.state.fields.CD[index].status}\n                              onChange={this.handleChange(index)}\n                              value={item.id}\n                              color=\"primary\"\n                            /></TableCell>\n                      <TableCell>{item.id}</TableCell>\n                      <TableCell>{item.description}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Grid>\n            <Grid item alignItems=\"right\">\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Enviar\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Dialog>\n    )\n  }\n}\n\nList.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchDistributionCentersPerStores,\n    },\n    dispatch\n  )\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles)(List))"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AADA;AAFA;AACA;AAgBA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AAVA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AA9BA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;;;AAuBA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AATA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;AAvGA;AACA;AAyGA;AACA;AADA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AAOA;;;;A","sourceRoot":""}