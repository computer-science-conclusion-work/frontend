{"version":3,"file":"main.824fd5b56741e1c4e8e5.hot-update.js","sources":["webpack:///./src/common/stores/pages/New.js","webpack:///./src/common/stores/pages/index.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport AppBar from '@material-ui/core/AppBar'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\n\n// Internal imports\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport styles from '../../../resources/theme/users'\nimport { post } from '../UserActions'\nimport Form from './Form'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass NewUser extends EnhancedComponent {\n  state = {\n    fields: {\n      name: '',\n      email: '',\n      role_id: '',\n    },\n  }\n\n  componentDidMount() {}\n\n  onSubmit = values => {\n    // valida os campos se necessário\n    this.props.post(values).then(data => {\n      if (data && data.code === 200) {\n        this.props.history.push('/users')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/users')\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <Dialog\n        open={true}\n        onClose={this.onClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n              Novo Usuário\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.onClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Form onClose={this.onClose} onSubmit={this.onSubmit} />\n      </Dialog>\n    )\n  }\n}\n\nNewUser.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.user.roles || [],\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      post,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(NewUser))\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\n// Externals imports (Dependencies)\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\n\n// Internal imports\nimport { fetchStores } from '../StoreActions'\nimport { getStoreListData } from '../StoreReducer'\nimport styles from '../../../resources/theme/stores'\nimport EditStore from './Edit'\nimport NewStore from './New'\nimport List from './List'\n\nclass Store extends Component {\n  componentDidMount() {\n    this.props.fetchStores()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Lojistas</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/stores/new\"\n            >\n              <PersonAddIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Route path=\"/stores/new\" component={NewStore} />\n        <Route path=\"/stores/:id/edit\" component={EditStore} />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nStore.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetchStores: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getStoreListData(state),\n})\n \nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchStores,\n    },\n    dispatch\n  )\n\n// export Store class\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Store))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAdA;;;AAeA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAlDA;AACA;AAoDA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjCA;AACA;AAmCA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AACA;AAOA;;;;A","sourceRoot":""}