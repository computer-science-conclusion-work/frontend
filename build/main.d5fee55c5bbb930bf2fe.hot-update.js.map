{"version":3,"file":"main.d5fee55c5bbb930bf2fe.hot-update.js","sources":["webpack:///./src/common/stores/pages/Filters.js","webpack:///./src/common/stores/pages/index.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Divider from '@material-ui/core/Divider'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n// Externals imports (Dependencies)\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/default'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { fetchStores, post } from '../StoreActions'\n\nclass Filters extends EnhancedComponent {\n  state = {\n    dirty: false,\n    fields: {\n      id: '',\n      description: '',\n    },\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    this.props.fetchStores(null, this.state.fields).then(data => {\n      if (data && data.status === 200) {\n        this.props.history.push('/stores')\n      }\n    })\n  }\n\n  render() {\n    const { classes } = this.props\n    return (\n      <div className={classes.root}>\n        <form className={classes.form} onSubmit={this.onSubmit}>\n          <ExpansionPanel defaultExpanded={true}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              <Typography className={classes.heading}>Filtros</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.details}>\n              <Grid className={classes.gridContainer} container spacing={16}>\n                <Grid item xs>\n                  <TextField\n                    onChange={this.onChange('description')}\n                    label=\"Descrição do Lojistas\"\n                    margin=\"dense\"\n                    className={classes.inputFilter}\n                    variant=\"outlined\"\n                    fullWidth\n                    value={this.state.fields.description}\n                  />\n                </Grid>\n\n                <Grid item xs>\n                  <TextField\n                    onChange={this.onChange('id')}\n                    label=\"Código do Lojista\"\n                    margin=\"dense\"\n                    className={classes.inputFilter}\n                    variant=\"outlined\"\n                    fullWidth\n                    value={this.state.fields.id}\n                  />\n                </Grid>\n              </Grid>\n            </ExpansionPanelDetails>\n            <Divider />\n            <ExpansionPanelActions>\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"small\"\n                className={classes.submit}\n              >\n                Filtrar\n              </Button>\n            </ExpansionPanelActions>\n          </ExpansionPanel>\n        </form>\n      </div>\n    )\n  }\n}\n\nFilters.PropTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      post,\n      fetchStores\n    },\n    dispatch\n  )\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withStyles(styles)(Filters))\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\nimport PropTypes from 'prop-types'\n\n// Externals imports (Dependencies)\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nimport styles from '../../../resources/theme/stores'\n\n// Internal imports\nimport { fetchStores } from '../StoreActions'\nimport { getStoreListData } from '../StoreReducer'\nimport EditStore from './Edit'\nimport List from './List'\nimport NewStore from './New'\nimport Filters from './Filters'\nimport ListDistributionCenters from './distributioncenters/index'\n\nclass Store extends Component {\n  componentDidMount() {\n    this.props.fetchStores()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Lojistas</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/stores/new\"\n            >\n              <PersonAddIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Filters />\n\n        <Route path=\"/stores/new\" component={NewStore} />\n        <Route path=\"/stores/:id/edit\" component={EditStore} />\n        <Route\n          path=\"/stores/:id/list-centers\"\n          component={ListDistributionCenters}\n        />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nStore.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetchStores: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getStoreListData(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchStores,\n    },\n    dispatch\n  )\n\n// export Store class\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Store))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AACA;AAOA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAaA;;;;AArEA;AACA;AAuEA;AACA;AADA;AACA;AAGA;AAAA;AAGA;AACA;AAFA;AAFA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAvCA;AACA;AAyCA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AACA;AAOA;;;;A","sourceRoot":""}