{"version":3,"file":"main.363ea573e793ded07449.hot-update.js","sources":["webpack:///./src/common/suppliers/pages/List.js"],"sourcesContent":["import IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport PencilIcon from '@material-ui/icons/Edit'\nimport HamburgerIcon from '@material-ui/icons/CalendarViewDay'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { fetchSuppliers } from '../SuppliersActions'\nimport Paginate from '../../main/pages/Paginate'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport consts from '../../../consts'\n\nclass List extends Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n        rowsPerPage: consts.DEFAULT_PAGINATION,\n    }\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({rowsPerPage: event.target.value}, () => {\n      this.onMovePage(null, null, 0);\n    })\n  }\n\n  onMovePage = (event, newPage) => {\n    this.props.fetchSuppliers(newPage + 1, this.props.filters, this.state.rowsPerPage).then(data => {\n    })\n  }\n\n  render() {\n    const { classes, items } = this.props\n    return (\n      <Paper className={classes.content} elevation={1}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Identificador</TableCell>\n              <TableCell>Description</TableCell>\n              <TableCell>CNPJ</TableCell>\n              <TableCell>Ações</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items && items.data.map(item => (\n              <TableRow key={item.id}>\n                <TableCell>{item.id}</TableCell>\n                <TableCell>{item.description}</TableCell>\n                <TableCell>{item.CNPJ}</TableCell>\n                <TableCell>\n                  <IconButton\n                    size=\"small\"\n                    component={Link}\n                    to={`/suppliers/${item.id}/edit`}\n                  >\n                    <PencilIcon />\n                  </IconButton>\n                  <IconButton\n                    size=\"small\"\n                    component={Link}\n                    to={`/suppliers/${item.id}/delete`}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n\n                  <IconButton\n                    size=\"small\"\n                    component={Link}\n                    to={`/suppliers/${item.id}/list-centers`}\n                  >\n                    <HamburgerIcon />\n                  </IconButton>\n\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Paginate handleChangeRowsPerPage={this.handleChangeRowsPerPage} rowsPerPage={this.state.rowsPerPage} rows={items.total} page={items.current_page -1} handleChangePage={this.onMovePage} />\n      </Paper>\n    )\n  }\n}\n\nList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nList.defaultProps = {\n  items: [],\n}\n\nconst mapStateToProps = state => ({\n  filters: state.supplier.filters \n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchSuppliers,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(List)\n\n//export default List\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAEA;AACA;AAfA;AACA;AADA;AAHA;AAMA;AACA;;;AAYA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AA1BA;AAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxEA;AACA;AA0EA;AACA;AACA;AAFA;AAKA;AACA;AADA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AAOA;;;;A","sourceRoot":""}