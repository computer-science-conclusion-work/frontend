{"version":3,"file":"main.e96af77bbb74ddb61d7d.hot-update.js","sources":["webpack:///./src/common/templates/DialogConfirm.jsx","webpack:///./src/common/users/pages/Delete.jsx"],"sourcesContent":["// IMPORTS\n// Material-ui\nimport Typography from '@material-ui/core/Typography'\n\n// External\nimport React from 'react'\n\n// Internal\nimport MyIconButton from '../components/MyIconButton'\n\nexport default props => {\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.handleClose}\n            TransitionComponent={props.transition} >\n            <AppBar className={props.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" color=\"inherit\" className={props.flex}>\n                        {props.title}\n                    </Typography>\n                    <MyIconButton\n                        handle={props.handleClose}\n                        label=\"Close\"\n                        icons={props.icon}\n                    />\n                </Toolbar>\n            </AppBar>\n\n            {props.chldren}\n        </Dialog>\n    )\n}","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n// Externals imports (Dependencies)\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/users'\nimport DialogConfirm from '../../templates/DialogConfirm'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { destroy, edit, fetchUsers, update } from '../UserActions'\nimport { getEditingUser } from '../UserReducer'\nimport MyButton from '../../components/MyButton'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass DeleteUser extends EnhancedComponent {\n  componentDidMount() {\n    this.props.edit(this.props.match.params.id)\n  }\n\n  onSubmit = () => {\n    const { user } = this.props\n    this.props.destroy(user.id).then(data => {\n      if (data && data.code === 200) {\n        this.props.history.push('/users')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/users')\n  }\n\n  render() {\n    const { classes, user } = this.props\n    return (\n        <DialogConfirm\n            open={user !== null}\n            handleClose={this.onClose}\n            transition={Transition}\n            appBar={classes.appBar}\n            flex={classes.flex}\n            title=\"Excluir UsuÃ¡rio\"\n            icon={<CloseIcon />}>\n            <Form\n                data={user}\n                onClose={this.onClose}\n                onSubmit={this.onSubmit} />\n            <Typography>\n            <Grid container spacing={6} Style=\"padding: 20px\">\n                <Grid item xs>\n                    <MyButton \n                        handle={() => this.onSubmit()}\n                        icon={<DeleteIcon className={classes.btnIcon} />}\n                        name=\"Confirmar\"/>\n                </Grid>\n\n                <Grid item xs>\n                    <MyButton \n                        handle={() => this.onClose()}\n                        icon={<BackIcon className={classes.btnIcon} />}\n                        name=\"Cancelar\"/>\n                </Grid>\n            </Grid>\n            </Typography>\n        </DialogConfirm>\n    )\n  }\n}\n\nDeleteUser.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.user.roles || [],\n  user: getEditingUser(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      update,\n      destroy,\n      edit,\n      fetchUsers,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DeleteUser))\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAhBA;AACA;AACA;;;AAeA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AApDA;AACA;AAsDA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAFA;AACA;AAUA;;;;A","sourceRoot":""}