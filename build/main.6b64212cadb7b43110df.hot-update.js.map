{"version":3,"file":"main.6b64212cadb7b43110df.hot-update.js","sources":["webpack:///./src/common/fleet/FleetActions.js"],"sourcesContent":["import axios from 'axios/index'\n\nimport config from '../../config'\nimport consts from '../../consts'\nimport action, { actionFailed } from '../../util/action'\nimport createAsyncConst from '../../util/createAsyncConst'\n\nexport const REMOVE_FLEET = createAsyncConst('REMOVE_FLEET')\nexport const SUBMIT_FLEET = createAsyncConst('SUBMIT_FLEET')\nexport const FETCH_FLEET = createAsyncConst('FETCH_FLEET')\nexport const EDIT_FLEET = createAsyncConst('EDIT_FLEET')\nexport const SAVE_FLEET_TO_DISTRIBUTION_CENTER = createAsyncConst(\n  'SAVE_FLEET_TO_DISTRIBUTION_CENTER'\n)\nexport const FETCH_FLEET_TO_DISTRIBUTION_CENTER = createAsyncConst(\n  'FETCH_FLEET_TO_DISTRIBUTION_CENTER'\n)\n\nexport function fetchFleet(page, filters = [], rows) {\n  return dispatch => {\n    dispatch(action(FETCH_FLEET.ACTION))\n    return axios\n      .get(\n        `${config.API_URL}/fleet?filters=` +\n          JSON.stringify(filters) +\n          `&&page=` +\n          page +\n          `&&rows=` +\n          (rows || consts.DEFAULT_PAGINATION),\n        {\n          page,\n          filters,\n        }\n      )\n      .then(resp => {\n        dispatch(\n          action(FETCH_FLEET.SUCCESS, { data: resp.data, filters: filters })\n        )\n        return resp\n      })\n      .catch(e => dispatch(actionFailed(FETCH_FLEET, e)))\n  }\n}\n\nexport function edit(id) {\n  return dispatch => {\n    dispatch(action(EDIT_FLEET.ACTION, { id }))\n    return axios\n      .get(`${config.API_URL}/fleet/${id}`)\n      .then(resp => resp.data.data.item)\n      .then(data => dispatch(action(EDIT_FLEET.SUCCESS, data)))\n      .catch(e => dispatch(actionFailed(EDIT_FLEET, e)))\n  }\n}\n\nexport function post(values) {\n  return submit(values, 'post')\n}\n\nexport function update(values) {\n  return submit(values, 'put')\n}\n\nfunction submit(values, method) {\n  const id = values.id ? `/${values.id}` : ''\n\n  return dispatch => {\n    dispatch(action(SUBMIT_FLEET.ACTION))\n    return axios[method](`${config.API_URL}/fleet/${id}`, values)\n      .then(resp => resp.data)\n      .then(data => {\n        dispatch(action(SUBMIT_FLEET.SUCCESS, data))\n        dispatch(fetchFleet())\n        return data\n      })\n      .catch(e => dispatch(actionFailed(SUBMIT_FLEET, e)))\n  }\n}\n\nexport function destroy(id) {\n  return dispatch => {\n    dispatch(action(REMOVE_FLEET.ACTION))\n    return axios\n      .delete(`${config.API_URL}/fleet/${id}`)\n      .then(resp => resp.data)\n      .then(data => {\n        dispatch(action(REMOVE_FLEET.SUCCESS, data))\n        dispatch(fetchFleet())\n      })\n      .catch(e => actionFailed(REMOVE_FLEET.FAILURE, e))\n  }\n}\n\n// Associação entre Centro de Distribuição e Lojistas\nexport function fetchFleetsPerDistributionCenters(id) {\n  return dispatch => {\n    dispatch(action(FETCH_FLEET_TO_DISTRIBUTION_CENTER.ACTION, { id }))\n    return axios\n      .get(`${config.API_URL}/distributioncenter/${id}/fleets`)\n      .then(resp => resp.data.data.item)\n      .then(data => {\n        dispatch(action(FETCH_FLEET_TO_DISTRIBUTION_CENTER.SUCCESS, data))\n        return data\n      })\n      .catch(e => dispatch(actionFailed(FETCH_FLEET_TO_DISTRIBUTION_CENTER, e)))\n  }\n}\n\nexport function saveFleetsPerDistributionCenters(values, id) {\n  return dispatch => {\n    dispatch(action(SAVE_FLEET_TO_DISTRIBUTION_CENTER.ACTION))\n    return axios\n      .post(`${config.API_URL}/distributioncenter/${id}/fleets/save`, values)\n      .then(resp => resp.data)\n      .then(data => {\n        dispatch(action(SAVE_FLEET_TO_DISTRIBUTION_CENTER.SUCCESS, data))\n        return data\n      })\n      .catch(e => dispatch(actionFailed(SAVE_FLEET_TO_DISTRIBUTION_CENTER, e)))\n  }\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AASA;AACA;AAFA;AAMA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;A","sourceRoot":""}