{"version":3,"file":"main.8db8bda7a4e3698bc2d8.hot-update.js","sources":["webpack:///./src/common/distributionCenters/DistributionCentersActions.js"],"sourcesContent":["import axios from 'axios/index'\n\nimport config from '../../config'\nimport action, { actionFailed } from '../../util/action'\nimport createAsyncConst from '../../util/createAsyncConst'\n\nexport const REMOVE_DISTRIBUTION_CENTER = createAsyncConst('REMOVE_DISTRIBUTION_CENTER')\nexport const SUBMIT_DISTRIBUTION_CENTER = createAsyncConst('SUBMIT_DISTRIBUTION_CENTER')\nexport const FETCH_DISTRIBUTION_CENTER = createAsyncConst('FETCH_DISTRIBUTION_CENTER')\nexport const SAVE_DISTRIBUTION_CENTER_SUPPLIER = createAsyncConst('SAVE_DISTRIBUTION_CENTER_SUPPLIER')\nexport const FETCH_DISTRIBUTION_CENTER_TO_SUPPLIER = createAsyncConst('FETCH_DISTRIBUTION_CENTER_TO_SUPPLIER')\nexport const EDIT_DISTRIBUTION_CENTER = createAsyncConst('EDIT_DISTRIBUTION_CENTER')\n\nexport function fetchDistributionCenters(page, filters = []) {\n  return dispatch => {\n    dispatch(action(FETCH_DISTRIBUTION_CENTER.ACTION))\n    return axios\n      .get(`${config.API_URL}/distributioncenter?filters=` + JSON.stringify(filters), {\n        page,\n        filters,\n      })\n      .then(resp => {\n        dispatch(action(FETCH_DISTRIBUTION_CENTER.SUCCESS, resp.data))\n        return resp\n      })\n      .catch(e => dispatch(actionFailed(FETCH_DISTRIBUTION_CENTER, e)))\n  }\n}\n\nexport function edit(id) {\n  return dispatch => {\n    dispatch(action(EDIT_USER.ACTION, { id }))\n    return axios\n      .get(`${config.API_URL}/users/${id}`)\n      .then(resp => resp.data.data.item)\n      .then(data => dispatch(action(EDIT_USER.SUCCESS, data)))\n      .catch(e => dispatch(actionFailed(EDIT_USER, e)))\n  }\n}\n\nexport function fetchDistributionCentersPerSuppliers(id) {\n  return dispatch => {\n    dispatch(action(FETCH_DISTRIBUTION_CENTER_TO_SUPPLIER.ACTION, { id }))\n    return axios\n      .get(`${config.API_URL}/distributioncenterpersupplier/${id}`)\n      .then(resp => resp.data.data.item)\n      .then(data => {\n        dispatch(action(FETCH_DISTRIBUTION_CENTER_TO_SUPPLIER.SUCCESS, data))\n        return data\n      })\n      // .then(data => dispatch(action(FETCH_DISTRIBUTION_CENTER_TO_SUPPLIER.SUCCESS, data)))\n      .catch(e => dispatch(actionFailed(FETCH_DISTRIBUTION_CENTER_TO_SUPPLIER, e)))\n  }\n}\n\nexport function saveDCSupplier(values, id){\n  return dispatch => {\n    dispatch(action(SAVE_DISTRIBUTION_CENTER_SUPPLIER.ACTION))\n    return axios.post(`${config.API_URL}/supplier/${id}/distributioncenters`, values)\n      .then(resp => resp.data)\n      .then(data => {\n        dispatch(action(SAVE_DISTRIBUTION_CENTER_SUPPLIER.SUCCESS, data))\n        return data\n      })\n      .catch(e => dispatch(actionFailed(SAVE_DISTRIBUTION_CENTER_SUPPLIER, e)))\n  }\n}\n\nexport function post(values) {\n  return submit(values, 'post')\n}\n\nexport function update(values) {\n  return submit(values, 'put')\n}\n\nfunction submit(values, method) {\n  const id = values.id ? `/${values.id}` : ''\n\n  return dispatch => {\n    dispatch(action(SUBMIT_USER.ACTION))\n    return axios[method](`${config.API_URL}/users${id}`, values)\n      .then(resp => resp.data)\n      .then(data => {\n        dispatch(action(SUBMIT_USER.SUCCESS, data))\n        return data\n      })\n      .catch(e => dispatch(actionFailed(SUBMIT_USER, e)))\n  }\n}\n\nexport function remove(id) {\n  return dispatch => {\n    dispatch(action(REMOVE_USER.ACTION))\n    return axios\n      .delete(`${config.API_URL}/api/user/${id}`)\n      .then(resp => resp.data)\n      .then(data => {\n        dispatch(action(REMOVE_USER.SUCCESS, data))\n        dispatch(fetchUsers())\n      })\n      .catch(e => actionFailed(REMOVE_USER.FAILURE, e))\n  }\n}\n\n// Associação entre Centro de Distribuição e Lojistas\nexport function fetchDistributionCentersPerStores(id) {\n  return dispatch => {\n    dispatch(action(FETCH_DISTRIBUTION_CENTER_TO_STORE.ACTION, { id }))\n    return axios\n      .get(`${config.API_URL}/store/${id}/distributioncenters`)\n      .then(resp => resp.data.data.item)\n      .then(data => {\n        dispatch(action(FETCH_DISTRIBUTION_CENTER_TO_STORE.SUCCESS, data))\n        return data\n      })\n      .catch(e => dispatch(actionFailed(FETCH_DISTRIBUTION_CENTER_TO_STORE, e)))\n  }\n}\n\nexport function saveDistributionCentersPerStores(values, id){\n  return dispatch => {\n    dispatch(action(SAVE_DISTRIBUTION_CENTER_STORE.ACTION))\n    return axios.post(`${config.API_URL}/supplier/${id}/distributioncenters`, values)\n      .then(resp => resp.data)\n      .then(data => {\n        dispatch(action(SAVE_DISTRIBUTION_CENTER_STORE.SUCCESS, data))\n        return data\n      })\n      .catch(e => dispatch(actionFailed(SAVE_DISTRIBUTION_CENTER_STORE, e)))\n  }\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AANA;AAQA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;A","sourceRoot":""}