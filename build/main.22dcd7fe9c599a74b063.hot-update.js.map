{"version":3,"file":"main.22dcd7fe9c599a74b063.hot-update.js","sources":["webpack:///./src/common/main/routes.js","webpack:///./src/common/stores/pages/index.js"],"sourcesContent":["import React from 'react'\nimport { Route, Switch, withRouter } from 'react-router-dom'\n\nimport Users from '../users/pages/index'\nimport Stores from '../stores/pages/index'\nimport Home from './pages/Home'\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/users\" component={Users} />\n      <Route path=\"/stores\" component={Stores} />\n    </Switch>\n  )\n}\n\nexport default withRouter(Routes)\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PersonAddIcon from '@material-ui/icons/PersonAdd'\n\n// Externals imports (Dependencies)\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\nimport PropTypes from 'prop-types'\n\n// Material UI\nimport styles from '../../../resources/theme/users'\nimport { fetchUsers } from '../UserActions'\nimport { getUserListData } from '../UserReducer'\nimport EditUser from './Edit'\nimport List from './List'\nimport NewUser from './New'\n\nclass User extends Component {\n  componentDidMount() {\n    this.props.fetchUsers()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Usu√°rios</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/users/new\"\n            >\n              <PersonAddIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Route path=\"/users/new\" component={NewUser} />\n        <Route path=\"/users/:id/edit\" component={EditUser} />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nUser.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetchUsers: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getUserListData(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchUsers,\n    },\n    dispatch\n  )\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(User))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAjCA;AACA;AAmCA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AAMA;;;;A","sourceRoot":""}