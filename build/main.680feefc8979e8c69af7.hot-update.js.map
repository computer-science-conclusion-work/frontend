{"version":3,"file":"main.680feefc8979e8c69af7.hot-update.js","sources":["webpack:///./src/common/distributionCenters/pages/fleets/index.js","webpack:///./src/common/distributionCenters/pages/index.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport Slide from '@material-ui/core/Slide'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\n// Externals imports (Dependencies)\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport Lista from './List'\nimport styles from '../../../../resources/theme/distributionCenters'\nimport EnhancedComponent from '../../../components/EnhancedComponent'\nimport { fetchDistributionCentersPerStores, saveDistributionCentersPerStores } from '../../../distributionCenters/DistributionCentersActions'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass DistributionCentersStores extends EnhancedComponent {\n  state = {\n    dirty: false,\n    fields: {},\n  }\n\n  componentDidMount() {\n    this.props.fetchDistributionCentersPerStores(this.props.match.params.id)\n  }\n\n  onSubmit = values => {\n    this.props\n      .saveDistributionCentersPerStores(values, this.props.match.params.id)\n      .then(data => {\n        if (data && data.code === 200) {\n          this.props.history.push('/stores')\n        }\n      })\n  }\n\n  onClose = () => {\n    this.props.history.push('/stores')\n  }\n\n  render() {\n    const { classes, items } = this.props\n    return (\n      <Lista\n        data={items}\n        classes={classes}\n        onClose={this.onClose}\n        onSubmit={this.onSubmit}\n      />\n    )\n  }\n}\n\nDistributionCentersStores.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  items: state.distributioncenter.items_store,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchDistributionCentersPerStores,\n      saveDistributionCentersPerStores,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DistributionCentersStores))\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport DistributionCenterIcon from '@material-ui/icons/Business'\nimport PropTypes from 'prop-types'\n// Externals imports (Dependencies)\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nimport styles from '../../../resources/theme/distributionCenters'\n// Internal imports\nimport { fetchDistributionCenters } from '../DistributionCentersActions'\nimport { getDistributionCenterListData } from '../DistributionCentersReducer'\nimport EditDistributionCenter from './Edit'\nimport Filters from './Filters'\nimport List from './List'\nimport NewDistributionCenter from './New'\nimport ListFleets from './fleets/index'\n\nclass DistributionCenter extends Component {\n  componentDidMount() {\n    this.props.fetchDistributionCenters()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Centros de Distribuição</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/distributioncenters/new\"\n            >\n              <DistributionCenterIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Filters />\n\n        <Route\n          path=\"/distributioncenters/new\"\n          component={NewDistributionCenter}\n        />\n        <Route\n          path=\"/distributioncenters/:id/edit\"\n          component={EditDistributionCenter}\n        />\n        <Route\n          path=\"/distributioncenters/:id/list-fleets\"\n          component={ListFleets}\n        />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nDistributionCenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetchDistributionCenters: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getDistributionCenterListData(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchDistributionCenters,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DistributionCenter))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAQA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAjBA;AACA;AACA;;;AAgBA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAlCA;AACA;AAoCA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAGA;AACA;AAFA;AAFA;AACA;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA7CA;AACA;AA+CA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AAOA;;;;A","sourceRoot":""}