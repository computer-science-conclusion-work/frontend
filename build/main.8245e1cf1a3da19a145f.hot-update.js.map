{"version":3,"file":"main.8245e1cf1a3da19a145f.hot-update.js","sources":["webpack:///./src/common/stores/pages/Form.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport { DialogActions, Grid, Select } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TextField from '@material-ui/core/TextField'\nimport withStyles from '@material-ui/core/styles/withStyles'\n\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n// Internal imports\nimport styles from '../../../resources/theme/stores'\nimport EnhancedComponent from '../../components/EnhancedComponent'\n\nclass StoreForm extends EnhancedComponent {\n  state = {\n    dirty: false,\n    fields: {\n      description: '',\n      min_freight: '',\n    },\n  }\n\n  handleClose = () => this.props.onClose && this.props.onClose()\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.state.dirty && nextProps.data) {\n      this.setState({\n        fields: {\n          ...nextProps.data,\n        },\n      })\n    }\n  }\n\n  onSubmit = e => {\n    e.preventDefault()\n    this.props.onSubmit && this.props.onSubmit(this.state.fields)\n  }\n\n  render() {\n    const { classes, roles } = this.props\n    return (\n      <form onSubmit={this.onSubmit}>\n        <DialogContent>\n          <Grid container spacing={16}>\n            <Grid item>\n              <TextField\n                onChange={this.onChange('name')}\n                label=\"Nome\"\n                required\n                fullWidth\n                value={this.state.fields.name}\n              />\n            </Grid>\n          </Grid>\n          <Grid container spacing={16}>\n            <Grid item>\n              <TextField\n                onChange={this.onChange('email')}\n                label=\"E-mail\"\n                required\n                value={this.state.fields.email}\n              />\n            </Grid>\n            <Grid item>\n              <FormControl className={classes.formControl}>\n                <InputLabel>Tipo de Usu√°rio</InputLabel>\n                <Select\n                  onChange={this.onChange('role_id')}\n                  value={this.state.fields.role_id}\n                >\n                  <MenuItem>Selecione...</MenuItem>\n                  {roles.map(role => (\n                    <MenuItem key={role.id} value={role.id}>\n                      {role.value}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" type=\"submit\">\n            Salvar\n          </Button>\n          <Button onClick={this.handleClose}>Cancelar</Button>\n        </DialogActions>\n      </form>\n    )\n  }\n}\n\nStoreForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.user.roles || [],\n})\n\nexport default connect(mapStateToProps)(withStyles(styles)(StoreForm))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AACA;AAOA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;;;;;;AAdA;AACA;AACA;AACA;AADA;AAKA;AACA;;;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA7EA;AACA;AA+EA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}