{"version":3,"file":"main.22411b0f9ba705ce3255.hot-update.js","sources":["webpack:///./src/common/students/pages/Edit.jsx"],"sourcesContent":["// IMPORTS\n// Material-ui\nimport Slide from '@material-ui/core/Slide'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PropTypes from 'prop-types'\n\n// External\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal\nimport styles from '../../../resources/theme/students'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { edit, fetchStudents, update } from '../StudentsActions'\nimport { getEditingStudent } from '../StudentsReducer'\nimport Form from './Form'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass EditStudent extends EnhancedComponent {\n  state = {\n    fields: {\n      id: '',\n      name: ''\n    },\n  }\n\n  componentDidMount() {\n    this.props.edit(this.props.match.params.id)\n  }\n\n  onSubmit = values => {\n    const { fetchStudents } = this.props\n    // valida os campos se necessÃ¡rio\n    this.props.update(values).then(data => {\n      fetchStudents()\n      if (data && data.code === 200) {\n        this.props.history.push('/students')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/students')\n  }\n\n  render() {\n    const { classes, student } = this.props\n    return (\n      <DialogForm\n        open={student !== null}\n        handleClose={this.onClose}\n        transition={Transition}\n        appBar={classes.appBar}\n        flex={classes.flex}\n        title=\"Editar Estudante\">\n        <Form\n          data={student}\n          onClose={this.onClose}\n          onSubmit={this.onSubmit} />\n      </DialogForm>\n    )\n  }\n}\n\nEditStudent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.students.roles || [],\n  student: getEditingStudent(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      update,\n      edit,\n      fetchStudents,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(EditStudent))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAFA;AADA;AACA;AAUA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAlBA;AACA;AACA;;;AAiBA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA3CA;AACA;AA6CA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAGA;AACA;AACA;AAHA;AAFA;AACA;AASA;;;;A","sourceRoot":""}