{"version":3,"file":"main.308f9ad64f7ca4278e29.hot-update.js","sources":["webpack:///./src/common/distributionCenters/DistributionCentersReducer.js","webpack:///./src/common/distributionCenters/pages/Delete.js","webpack:///./src/common/distributionCenters/pages/index.js","webpack:///./src/common/fleet/FleetReducer.js","webpack:///./src/common/fleet/pages/Delete.js","webpack:///./src/common/fleet/pages/index.js","webpack:///./src/common/stores/pages/Delete.js","webpack:///./src/common/suppliers/pages/Delete.js"],"sourcesContent":["import {\n  EDIT_DISTRIBUTION_CENTER,\n  FETCH_DISTRIBUTION_CENTER,\n  FETCH_DISTRIBUTION_CENTER_TO_STORE,\n  FETCH_DISTRIBUTION_CENTER_TO_SUPPLIER,\n  REMOVE_DISTRIBUTION_CENTER,\n} from './DistributionCentersActions'\n\nconst INITIAL_STATE = {\n  items: [],\n  items_supplier: [],\n  items_store: [],\n  roles: [],\n  totalSize: 0,\n  page: 1,\n  sizePerPage: 10,\n  filters: [],\n  editingDistributionCenters: null,\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_DISTRIBUTION_CENTER.SUCCESS:\n      return {\n        ...state,\n        items: action.payload.data.items,\n        // roles: action.payload.data.filterRoles,\n        // totalSize: action.payload.data.totalSize,\n        // page: action.payload.data.page,\n        // sizePerPage: action.payload.data.sizePerPage,\n        filters: action.payload.data.filters,\n      }\n    case EDIT_DISTRIBUTION_CENTER.SUCCESS:\n      return {\n        ...state,\n        editingDistributionCenters: action.payload,\n      }\n    case REMOVE_DISTRIBUTION_CENTER.SUCCESS:\n      return {\n        ...state,\n        items: action.payload.data.items,\n        filters: action.payload.data.filters,\n      }\n    case FETCH_DISTRIBUTION_CENTER_TO_SUPPLIER.SUCCESS:\n      return {\n        ...state,\n        items_supplier: action.payload,\n      }\n    case FETCH_DISTRIBUTION_CENTER_TO_STORE.SUCCESS:\n      return {\n        ...state,\n        items_store: action.payload,\n      }\n    case 'DISTRIBUTION_CENTER_INITIALIZE':\n      return {\n        ...state,\n        roles: action.payload.data.roles,\n        stores: action.payload.data.stores,\n        branches: action.payload.data.branches,\n        role: action.payload.data.role,\n      }\n    default:\n      return state\n  }\n}\n\nexport const getSupplierListData = state => {\n  return {\n    items: state.supplier.items,\n    roles: state.supplier.roles,\n    totalSize: state.supplier.totalSize,\n    page: state.supplier.page,\n    sizePerPage: state.supplier.sizePerPage,\n  }\n}\n\nexport const getStoreListData = state => {\n  return {\n    items: state.store.items,\n    roles: state.store.roles,\n    totalSize: state.store.totalSize,\n    page: state.store.page,\n    sizePerPage: state.store.sizePerPage,\n  }\n}\n\nexport const getDistributionCenterListData = state => {\n  return {\n    items: state.distributioncenter.items,\n    roles: state.distributioncenter.roles,\n    totalSize: state.distributioncenter.totalSize,\n    page: state.distributioncenter.page,\n    sizePerPage: state.distributioncenter.sizePerPage,\n  }\n}\n\nexport const getEditingDistributionCenters = state => {\n  return state.distributioncenter.editingDistributionCenters\n}\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport PropTypes from 'prop-types'\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/default'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport {\n  destroy,\n  edit,\n  fetchDistributionCenters,\n  update,\n} from '../DistributionCentersActions'\nimport { getEditingDistributionCenters } from '../DistributionCentersReducer'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass DeleteDistributionCenter extends EnhancedComponent {\n  componentDidMount() {\n    this.props.edit(this.props.match.params.id)\n  }\n\n  onSubmit = () => {\n    const { distributioncenter } = this.props\n    this.props.destroy(distributioncenter.id).then(data => {\n      if (data && data.code === 200) {\n        this.props.history.push('/distributioncenters')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/distributioncenters')\n  }\n\n  render() {\n    const { classes, distributioncenter } = this.props\n    return (\n      <Dialog\n        open={distributioncenter !== null}\n        onClose={this.onClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n              Excluir Centro de Distribuição\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.onClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Typography>\n          <Grid container spacing={6} Style=\"padding: 20px\">\n            <Grid item xs>\n              <Button\n                onClick={() => this.onSubmit()}\n                className={classes.colorDanger}\n                size=\"medium\"\n                //color=\"secondary\"\n                variant=\"contained\"\n              >\n                <DeleteIcon className={classes.btnIcon} /> Confirmar\n              </Button>\n            </Grid>\n\n            <Grid item xs>\n              <Button\n                onClick={() => this.onClose()}\n                size=\"medium\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                <BackIcon className={classes.btnIcon} /> Cancelar\n              </Button>\n            </Grid>\n          </Grid>\n        </Typography>\n      </Dialog>\n    )\n  }\n}\n\nDeleteDistributionCenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.distributioncenter.roles || [],\n  distributioncenter: getEditingDistributionCenters(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      update,\n      destroy,\n      edit,\n      fetchDistributionCenters,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DeleteDistributionCenter))\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport DistributionCenterIcon from '@material-ui/icons/Business'\nimport PropTypes from 'prop-types'\n// Externals imports (Dependencies)\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nimport styles from '../../../resources/theme/distributionCenters'\n// Internal imports\nimport { fetchDistributionCenters } from '../DistributionCentersActions'\nimport { getDistributionCenterListData } from '../DistributionCentersReducer'\nimport DeleteDistributionCenter from './Delete'\nimport EditDistributionCenter from './Edit'\nimport Filters from './Filters'\nimport List from './List'\nimport NewDistributionCenter from './New'\nimport ListFleets from './fleets/index'\n\nclass DistributionCenter extends Component {\n  componentDidMount() {\n    this.props.fetchDistributionCenters()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Centros de Distribuição</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/distributioncenters/new\"\n            >\n              <DistributionCenterIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Filters />\n\n        <Route\n          path=\"/distributioncenters/new\"\n          component={NewDistributionCenter}\n        />\n        <Route\n          path=\"/distributioncenters/:id/edit\"\n          component={EditDistributionCenter}\n        />\n        <Route\n          path=\"/distributioncenters/:id/delete\"\n          component={DeleteDistributionCenter}\n        />\n        <Route\n          path=\"/distributioncenters/:id/list-fleets\"\n          component={ListFleets}\n        />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nDistributionCenter.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetchDistributionCenters: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getDistributionCenterListData(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchDistributionCenters,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DistributionCenter))\n","import {\n  EDIT_FLEET,\n  FETCH_FLEET,\n  FETCH_FLEET_TO_DISTRIBUTION_CENTER,\n  REMOVE_FLEET,\n} from './FleetActions'\n\nconst INITIAL_STATE = {\n  items: [],\n  items_distributionCenter: [],\n  roles: [],\n  totalSize: 0,\n  page: 1,\n  sizePerPage: 10,\n  filters: [],\n  editingFleet: null,\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case FETCH_FLEET.SUCCESS:\n      return {\n        ...state,\n        items: action.payload.data.data.items,\n        filters: action.payload.filters,\n      }\n    case EDIT_FLEET.SUCCESS:\n      return {\n        ...state,\n        editingFleet: action.payload,\n      }\n    case REMOVE_FLEET.SUCCESS:\n      return {\n        ...state,\n        items: action.payload.data.items,\n        filters: action.payload.filters,\n      }\n    case FETCH_FLEET_TO_DISTRIBUTION_CENTER.SUCCESS:\n      return {\n        ...state,\n        items_distributionCenter: action.payload,\n      }\n    case 'FLEET_INITIALIZE':\n      return {\n        ...state,\n        roles: action.payload.data.roles,\n        stores: action.payload.data.stores,\n        branches: action.payload.data.branches,\n        role: action.payload.data.role,\n      }\n    default:\n      return state\n  }\n}\n\nexport const getFleetListData = state => {\n  return {\n    items: state.fleet.items,\n  }\n}\n\nexport const getEditingFleet = state => {\n  return state.fleet.editingFleet\n}\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport PropTypes from 'prop-types'\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/default'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { destroy, edit, fetchFleet, update } from '../FleetActions'\nimport { getEditingFleet } from '../FleetReducer'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass DeleteFleet extends EnhancedComponent {\n  componentDidMount() {\n    this.props.edit(this.props.match.params.id)\n  }\n\n  onSubmit = () => {\n    const { fleet } = this.props\n    this.props.destroy(fleet.id).then(data => {\n      if (data && data.code === 200) {\n        this.props.history.push('/fleet')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/fleet')\n  }\n\n  render() {\n    const { classes, fleet } = this.props\n    return (\n      <Dialog\n        open={fleet !== null}\n        onClose={this.onClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n              Excluir Frotista\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.onClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Typography>\n          <Grid container spacing={6} Style=\"padding: 20px\">\n            <Grid item xs>\n              <Button\n                onClick={() => this.onSubmit()}\n                className={classes.colorDanger}\n                size=\"medium\"\n                //color=\"secondary\"\n                variant=\"contained\"\n              >\n                <DeleteIcon className={classes.btnIcon} /> Confirmar\n              </Button>\n            </Grid>\n\n            <Grid item xs>\n              <Button\n                onClick={() => this.onClose()}\n                size=\"medium\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                <BackIcon className={classes.btnIcon} /> Cancelar\n              </Button>\n            </Grid>\n          </Grid>\n        </Typography>\n      </Dialog>\n    )\n  }\n}\n\nDeleteFleet.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.fleet.roles || [],\n  fleet: getEditingFleet(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      update,\n      destroy,\n      edit,\n      fetchFleet,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DeleteFleet))\n","import { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport PersonAddIcon from '@material-ui/icons/LocalShipping'\nimport PropTypes from 'prop-types'\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\nimport styles from '../../../resources/theme/users'\nimport { fetchFleet } from '../FleetActions'\nimport { getFleetListData } from '../FleetReducer'\nimport DeleteFleet from './Delete'\nimport EditFleet from './Edit'\nimport Filters from './Filters'\nimport List from './List'\nimport NewFleet from './New'\n\nclass Fleet extends Component {\n  componentDidMount() {\n    this.props.fetchFleet()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Frotistas</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/fleet/new\"\n            >\n              <PersonAddIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Filters />\n\n        <Route path=\"/fleet/new\" component={NewFleet} />\n        <Route path=\"/fleet/:id/edit\" component={EditFleet} />\n        <Route path=\"/fleet/:id/delete\" component={DeleteFleet} />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nFleet.propTypes = {\n  classes: PropTypes.object.isRequired,\n  //fetchFleet: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getFleetListData(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchFleet,\n    },\n    dispatch\n  )\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Fleet))\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport PropTypes from 'prop-types'\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/default'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { destroy, edit, fetchStores, update } from '../StoreActions'\nimport { getEditingStore } from '../StoreReducer'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass DeleteStore extends EnhancedComponent {\n  componentDidMount() {\n    this.props.edit(this.props.match.params.id)\n  }\n\n  onSubmit = () => {\n    const { store } = this.props\n    this.props.destroy(store.id).then(data => {\n      if (data && data.code === 200) {\n        this.props.history.push('/stores')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/stores')\n  }\n\n  render() {\n    const { classes, store } = this.props\n    return (\n      <Dialog\n        open={store !== null}\n        onClose={this.onClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n              Excluir Lojista\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.onClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Typography>\n          <Grid container spacing={6} Style=\"padding: 20px\">\n            <Grid item xs>\n              <Button\n                onClick={() => this.onSubmit()}\n                className={classes.colorDanger}\n                size=\"medium\"\n                //color=\"secondary\"\n                variant=\"contained\"\n              >\n                <DeleteIcon className={classes.btnIcon} /> Confirmar\n              </Button>\n            </Grid>\n\n            <Grid item xs>\n              <Button\n                onClick={() => this.onClose()}\n                size=\"medium\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                <BackIcon className={classes.btnIcon} /> Cancelar\n              </Button>\n            </Grid>\n          </Grid>\n        </Typography>\n      </Dialog>\n    )\n  }\n}\n\nDeleteStore.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.store.roles || [],\n  store: getEditingStore(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      update,\n      destroy,\n      edit,\n      fetchStores,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DeleteStore))\n","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport BackIcon from '@material-ui/icons/ArrowBack'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport PropTypes from 'prop-types'\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/default'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { destroy, edit, fetchSuppliers, update } from '../SuppliersActions'\nimport { getEditingSupplier } from '../SuppliersReducer'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass DeleteSupplier extends EnhancedComponent {\n  componentDidMount() {\n    this.props.edit(this.props.match.params.id)\n  }\n\n  onSubmit = () => {\n    const { supplier } = this.props\n    this.props.destroy(supplier.id).then(data => {\n      if (data && data.code === 200) {\n        this.props.history.push('/suppliers')\n      }\n    })\n  }\n\n  onClose = () => {\n    this.props.history.push('/suppliers')\n  }\n\n  render() {\n    const { classes, supplier } = this.props\n    return (\n      <Dialog\n        open={supplier !== null}\n        onClose={this.onClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n              Excluir Fornecedor\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.onClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Typography>\n          <Grid container spacing={6} Style=\"padding: 20px\">\n            <Grid item xs>\n              <Button\n                onClick={() => this.onSubmit()}\n                className={classes.colorDanger}\n                size=\"medium\"\n                //color=\"secondary\"\n                variant=\"contained\"\n              >\n                <DeleteIcon className={classes.btnIcon} /> Confirmar\n              </Button>\n            </Grid>\n\n            <Grid item xs>\n              <Button\n                onClick={() => this.onClose()}\n                size=\"medium\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                <BackIcon className={classes.btnIcon} /> Cancelar\n              </Button>\n            </Grid>\n          </Grid>\n        </Typography>\n      </Dialog>\n    )\n  }\n}\n\nDeleteSupplier.propTypes = {\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  roles: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  roles: state.supplier.roles || [],\n  supplier: getEditingSupplier(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      update,\n      destroy,\n      edit,\n      fetchSuppliers,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DeleteSupplier))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AAzCA;AA2CA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAhBA;AACA;AACA;;;AAeA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA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","sourceRoot":""}