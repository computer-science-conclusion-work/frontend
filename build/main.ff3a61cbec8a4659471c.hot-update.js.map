{"version":3,"file":"main.ff3a61cbec8a4659471c.hot-update.js","sources":["webpack:///./src/common/distributionCenters/pages/List.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport IconButton from '@material-ui/core/IconButton'\nimport Paper from '@material-ui/core/Paper'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport PencilIcon from '@material-ui/icons/Edit'\nimport ListIcon from '@material-ui/icons/List'\nimport PropTypes from 'prop-types'\n\n// Externals imports (Dependencies)\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport Paginate from '../../main/pages/Paginate'\nimport { fetchDistributionCenters } from '../DistributionCentersActions'\nimport consts from '../../../consts'\n\nclass List extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      rowsPerPage: consts.DEFAULT_PAGINATION,\n    }\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value }, () => {\n      this.onChangePage(null, null, 0)\n    })\n  }\n\n  onChangePage = (event, newPage) => {\n    this.props\n      .fetchDistributionCenters(newPage + 1, this.props.filters, this.state.rowsPerPage)\n      .then(data => {})\n  }\n\n  render() {\n    const { classes, items } = this.props\n    return (\n      <Paper className={classes.content} elevation={1}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Identificador</TableCell>\n              <TableCell>Descrição</TableCell>\n              <TableCell>CNPJ</TableCell>\n              <TableCell>Ações</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items &&\n              items.data &&\n              items.data.map(item => (\n                <TableRow key={item.id}>\n                  <TableCell>{item.id}</TableCell>\n                  <TableCell>{item.description}</TableCell>\n                  <TableCell>{item.CNPJ}</TableCell>\n                  <TableCell>\n                    <IconButton\n                      size=\"small\"\n                      component={Link}\n                      to={`/distributioncenters/${item.id}/edit`}\n                    >\n                      <PencilIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      component={Link}\n                      to={`/distributioncenters/${item.id}/delete`}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n\n                    <IconButton\n                      size=\"small\"\n                      component={Link}\n                      to={`/distributioncenters/${item.id}/list-fleets`}\n                    >\n                      <ListIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n          </TableBody>\n        </Table>\n        <Paginate\n          handleChangeRowsPerPage={this.handleChangeRowsPerPage}\n          rowsPerPage={this.state.rowsPerPage}\n          rows={items.total}\n          page={items.current_page - 1}\n          handleChangePage={this.onChangePage}\n        />\n      </Paper>\n    )\n  }\n}\n\nList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nList.defaultProps = {\n  items: [],\n}\n\nconst mapStateToProps = state => ({\n  filters: state.distributioncenter.filters,\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchDistributionCenters,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(List)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAbA;AAeA;AAGA;AACA;AAhBA;AACA;AADA;AAHA;AAMA;AACA;;;AAaA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAmCA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AAhFA;AACA;AAkFA;AACA;AACA;AAFA;AAKA;AACA;AADA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AAOA;;;;A","sourceRoot":""}