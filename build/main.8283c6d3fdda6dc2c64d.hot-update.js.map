{"version":3,"file":"main.8283c6d3fdda6dc2c64d.hot-update.js","sources":["webpack:///./src/common/stores/pages/Delete.js","webpack:///./src/common/stores/pages/index.js"],"sourcesContent":["// IMPORTS\n// Material UI\nimport AppBar from '@material-ui/core/AppBar'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Slide from '@material-ui/core/Slide'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport CloseIcon from '@material-ui/icons/Close'\n\n// Externals imports (Dependencies)\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport styles from '../../../resources/theme/default'\nimport EnhancedComponent from '../../components/EnhancedComponent'\nimport { destroy, edit, fetchCompanies, update } from '../CompaniesActions'\nimport { getEditingCompany } from '../CompaniesReducer'\nimport Form from './Form'\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />\n}\n\nclass DestroyCompany extends EnhancedComponent {\n  state = {\n    fields: {\n      id: '',\n      name: '',\n      active_points: '',\n      responsable_name: '',\n      responsable_email: '',\n      points: '',\n      active_ponts: '',\n      accumulation_points: '',\n    },\n  }\n\n  onSubmit = values => {\n    const { fetchCompanies } = this.props\n    // valida os campos se necessÃ¡rio\n    this.props.destroy(values.id).then(data => {\n      fetchCompanies()\n      if (data && data.code === 200) {\n        this.props.history.push('/companies')\n      }\n    })\n  }\n\n  componentDidMount() {\n    this.props.edit(this.props.match.params.id)\n  }\n\n  onClose = () => {\n    this.props.history.push('/companies')\n  }\n\n  render() {\n    const { classes, company } = this.props\n    return (\n      <Dialog\n        open={company !== null}\n        onClose={this.onClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n              Deletar Empresa\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              onClick={this.onClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Form data={company} onClose={this.onClose} onSubmit={this.onSubmit} />\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  /* roles: state.user.roles || [], */\n  company: getEditingCompany(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      update,\n      edit,\n      destroy,\n      fetchCompanies,\n    },\n    dispatch\n  )\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DestroyCompany))","// IMPORTS\n// Material UI\nimport { Grid } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport StoreIcon from '@material-ui/icons/LocalShipping'\nimport PropTypes from 'prop-types'\n\n// Externals imports (Dependencies)\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, Route } from 'react-router-dom'\nimport { bindActionCreators } from 'redux'\n\n// Internal imports\nimport styles from '../../../resources/theme/stores'\nimport { fetchStores } from '../StoreActions'\nimport { getStoreListData } from '../StoreReducer'\nimport EditStore from './Edit'\nimport Filters from './Filters'\nimport List from './List'\nimport NewStore from './New'\nimport DeleteStore from './Delete'\nimport ListDistributionCenters from './distributioncenters/index'\n\nclass Store extends Component {\n  componentDidMount() {\n    this.props.fetchStores()\n  }\n\n  render() {\n    const { classes, items } = this.props\n\n    return (\n      <Fragment>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item className={classes.grow}>\n            <Typography variant=\"h3\">Lojistas</Typography>\n          </Grid>\n          <Grid item>\n            <Button\n              size=\"medium\"\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/stores/new\"\n            >\n              <StoreIcon className={classes.btnIcon} /> Cadastrar\n            </Button>\n          </Grid>\n        </Grid>\n\n        <Filters />\n\n        <Route path=\"/stores/new\" component={NewStore} />\n        <Route path=\"/stores/:id/edit\" component={EditStore} />\n        <Route path=\"/stores/:id/delete\" component={DeleteStore} />\n        <Route\n          path=\"/stores/:id/list-centers\"\n          component={ListDistributionCenters}\n        />\n\n        <List classes={classes} items={items} />\n      </Fragment>\n    )\n  }\n}\n\nStore.propTypes = {\n  classes: PropTypes.object.isRequired,\n  fetchStores: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  ...getStoreListData(state),\n})\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      fetchStores,\n    },\n    dispatch\n  )\n\n// export Store class\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Store))\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AACA;AAYA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;;;;;;AAPA;AACA;AACA;;;AAMA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1DA;AACA;AA4DA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAFA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAxCA;AACA;AA0CA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AACA;AAGA;AAAA;AAGA;AADA;AAFA;AACA;AACA;AAOA;;;;A","sourceRoot":""}